import fs from 'fs';
import path from 'path';
import https from 'https';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML —Å–∏–º–≤–æ–ª–æ–≤
function escapeHtml(text) {
  if (!text || typeof text !== 'string') {
    return '';
  }
  
  const map = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#039;'
  };
  
  return text.replace(/[&<>"']/g, function(m) { return map[m]; });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö API
async function retryApiCall(apiFunction, maxRetries = 3) {
  for (let attempt = 1; attempt <= maxRetries; attempt++) {
    try {
      const result = await apiFunction();
      return result;
    } catch (error) {
      if (attempt === maxRetries) {
        throw error;
      }
      console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ API (–ø–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxRetries}): ${error.message}`);
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, attempt * 1000));
    }
  }
}

// –ú–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const pageMetas = {
  '/': {
    title: '–ì–ª–∞–≤–Ω–∞—è ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏',
    description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –±—É—Ä–æ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ - —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –¥–æ–ª–æ—Ç–∞, —Ç—Ä—É–±—ã, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç. –ö–∞—Ç–∞–ª–æ–≥, —Ü–µ–Ω—ã, –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏.'
  },
  '/catalog': {
    title: '–ö–∞—Ç–∞–ª–æ–≥ ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏',
    description: '–ö–∞—Ç–∞–ª–æ–≥ –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤. –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç, –≥–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞, –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏.'
  },
  '/statji': {
    title: '–°—Ç–∞—Ç—å–∏ ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏',
    description: '–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ–± –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ –¥–ª—è –±—É—Ä–µ–Ω–∏—è —Å–∫–≤–∞–∂–∏–Ω, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö –≤ –æ—Ç—Ä–∞—Å–ª–∏.'
  },
  '/garantiya': {
    title: '–ì–∞—Ä–∞–Ω—Ç–∏—è ‚Äî –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    description: '–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ —É—Å–ª–æ–≤–∏—è –Ω–∞ –±—É—Ä–æ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ. –ü–æ–ª–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.'
  },
  '/oplata': {
    title: '–û–ø–ª–∞—Ç–∞ ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏',
    description: '–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –∏ —É—Å–ª–æ–≤–∏—è –ø–æ–∫—É–ø–∫–∏ –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –£–¥–æ–±–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.'
  },
  '/dostavka': {
    title: '–î–æ—Å—Ç–∞–≤–∫–∞ ‚Äî –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏. –ë—ã—Å—Ç—Ä–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.'
  },
  '/o-kompanii': {
    title: '–û –∫–æ–º–ø–∞–Ω–∏–∏ ‚Äî –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ - –≤–µ–¥—É—â–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –≤ –†–æ—Å—Å–∏–∏.'
  },
  '/kontakty': {
    title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã ‚Äî –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    description: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Å–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏ —Å –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –¢–µ–ª–µ—Ñ–æ–Ω—ã, –∞–¥—Ä–µ—Å–∞ –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–ª—è —Å–≤—è–∑–∏.'
  },
  '/basket': {
    title: '–ö–æ—Ä–∑–∏–Ω–∞ ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏',
    description: '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫ –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –∏ —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏.'
  },
  '/search': {
    title: '–ü–æ–∏—Å–∫ ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏',
    description: '–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤. –ù–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –±—ã—Å—Ç—Ä–æ –∏ –ø—Ä–æ—Å—Ç–æ.'
  },
  '/policy': {
    title: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ‚Äî –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    description: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –ü—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.'
  },
  '/terms': {
    title: '–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ‚Äî –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ burspb.com. –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞.'
  },
  '/cookie-policy': {
    title: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Cookie ‚Äî –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    description: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ cookie –Ω–∞ —Å–∞–π—Ç–µ –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.'
  },
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  '/basket/confirm': {
    title: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏',
    description: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!'
  },
  '/seo-dashboard': {
    title: 'SEO –ü–∞–Ω–µ–ª—å ‚Äî Burspb Admin',
    description: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–∞–π—Ç–∞.'
  },
  '/seo-report': {
    title: 'SEO –û—Ç—á–µ—Ç ‚Äî Burspb Admin',
    description: '–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ SEO –º–µ—Ç—Ä–∏–∫–∞–º –∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º —Å–∞–π—Ç–∞.'
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Ç–∏ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
function getRouteFromFilename(filename, subdir = '') {
  if (filename === 'index.html' && !subdir) return '/';
  
  const route = subdir ? `/${subdir}/${filename.replace('.html', '')}` : `/${filename.replace('.html', '')}`;
  return route;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ HTML —Ñ–∞–π–ª–æ–≤
function findHtmlFiles(dir, subdir = '') {
  const files = [];
  const items = fs.readdirSync(dir);
  
  for (const item of items) {
    const fullPath = path.join(dir, item);
    const stat = fs.statSync(fullPath);
    
    if (stat.isDirectory()) {
      // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏
      const subdirPath = subdir ? `${subdir}/${item}` : item;
      files.push(...findHtmlFiles(fullPath, subdirPath));
    } else if (item.endsWith('.html')) {
      files.push({
        filename: item,
        fullPath: fullPath,
        subdir: subdir
      });
    }
  }
  
  return files;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ –≤ HTML —Ñ–∞–π–ª–µ
function updateMetaTags(filePath, route) {
  console.log(`üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: ${filePath} (—Ä–æ—É—Ç: ${route})`);
  
  const meta = pageMetas[route];
  if (!meta) {
    console.log(`‚ö†Ô∏è –ú–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è ${route} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
    return;
  }
  
  let html = fs.readFileSync(filePath, 'utf-8');
  
  // –ó–∞–º–µ–Ω—è–µ–º title
  html = html.replace(
    /<title>.*?<\/title>/,
    `<title>${meta.title}</title>`
  );
  
  // –ó–∞–º–µ–Ω—è–µ–º description
  html = html.replace(
    /<meta name="description" content=".*?">/,
    `<meta name="description" content="${meta.description}">`
  );
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º canonical URL –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  let canonicalUrl;
  if (route === '/') {
    canonicalUrl = 'https://burspb.com/';
  } else if (route.includes('/page/')) {
    // –î–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —É–±–∏—Ä–∞–µ–º /page/X –∏ —É–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ –±–∞–∑–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    canonicalUrl = `https://burspb.com${route.replace(/\/page\/\d+$/, '')}`;
  } else {
    canonicalUrl = `https://burspb.com${route}`;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º canonical URL
  html = html.replace(
    /<link rel="canonical" href=".*?">/,
    `<link rel="canonical" href="${canonicalUrl}">`
  );
  
  // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω canonical, –¥–æ–±–∞–≤–ª—è–µ–º
  if (!html.includes('<link rel="canonical"')) {
    html = html.replace(
      '<!-- Canonical URL (–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–µ—Ä–µ–∑ JavaScript) -->',
      `<link rel="canonical" href="${canonicalUrl}">`
    );
  }
  
  fs.writeFileSync(filePath, html);
  console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω ${route}: "${meta.title}"`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–µ–π –∏–∑ API
async function loadArticles() {
  return new Promise((resolve) => {
    https.get('https://admin.burspb.com/data/v1/posts', (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        try {
          const response = JSON.parse(data);
          // API –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
          if (Array.isArray(response)) {
            console.log(`üìö –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${response.length} —Å—Ç–∞—Ç–µ–π –∏–∑ API`);
            resolve(response);
          } else if (response.posts && Array.isArray(response.posts)) {
            console.log(`üìö –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${response.posts.length} —Å—Ç–∞—Ç–µ–π –∏–∑ API`);
            resolve(response.posts);
          } else if (response.data && Array.isArray(response.data)) {
            console.log(`üìö –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${response.data.length} —Å—Ç–∞—Ç–µ–π –∏–∑ API`);
            resolve(response.data);
          } else {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç—å–∏ –∏–∑ API - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(response).substring(0, 200));
            resolve([]);
          }
        } catch (error) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ API —Å—Ç–∞—Ç–µ–π:', error.message);
          console.log('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', data.substring(0, 200));
          resolve([]);
        }
      });
    }).on('error', (error) => {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–µ–π:', error.message);
      resolve([]);
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç—å–∏ –∏–∑ API
async function loadArticle(slug) {
  return new Promise((resolve) => {
    const url = `https://admin.burspb.com/data/v1/post/slug/${slug}`;
    https.get(url, (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        try {
          const response = JSON.parse(data);
          // –î–ª—è API endpoint /post/slug/{slug} –æ—Ç–≤–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–∞–ø—Ä—è–º—É—é –∫–∞–∫ –æ–±—ä–µ–∫—Ç —Å—Ç–∞—Ç—å–∏
          if (response && response.title) {
            console.log(`üìñ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Å—Ç–∞—Ç—å—è: ${response.title}`);
            resolve(response);
          } else {
            console.log(`‚ö†Ô∏è –°—Ç–∞—Ç—å—è ${slug} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ API`);
            resolve(null);
          }
        } catch (error) {
          console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ API –¥–ª—è ${slug}:`, error.message);
          resolve(null);
        }
      });
    }).on('error', (error) => {
      console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—å–∏ ${slug}:`, error.message);
      resolve(null);
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è HTML —Ñ–∞–π–ª–∞ –¥–ª—è —Å—Ç–∞—Ç—å–∏
async function createArticlePage(article, slug, distDir) {
  const DEFAULT_SUFFIX = '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏';
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–µ–π
  const templatePath = path.join(distDir, 'statji.html');
  if (!fs.existsSync(templatePath)) {
    console.log('‚ö†Ô∏è –®–∞–±–ª–æ–Ω statji.html –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  let html = fs.readFileSync(templatePath, 'utf-8');
  
  // –°–æ–∑–¥–∞–µ–º title –∏ description –¥–ª—è —Å—Ç–∞—Ç—å–∏
  const title = `${article.title} ‚Äî ${DEFAULT_SUFFIX}`;
  const cleanContent = article.content ? article.content.replace(/<[^>]*>/g, '') : '';
  const description = cleanContent.length > 150 
    ? `${cleanContent.slice(0, 150)}...` 
    : `–°—Ç–∞—Ç—å—è: ${article.title}. –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ –¥–ª—è –±—É—Ä–µ–Ω–∏—è —Å–∫–≤–∞–∂–∏–Ω.`;
  
  // –ó–∞–º–µ–Ω—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏
  html = html.replace(
    /<title>.*?<\/title>/,
    `<title>${title}</title>`
  );
  
  html = html.replace(
    /<meta name="description" content=".*?">/,
    `<meta name="description" content="${description}">`
  );
  
  // –û–±–Ω–æ–≤–ª—è–µ–º canonical URL
  const canonicalUrl = `https://burspb.com/statji/${slug}`;
  if (html.includes('<link rel="canonical"')) {
    html = html.replace(
      /<link rel="canonical" href=".*?">/,
      `<link rel="canonical" href="${canonicalUrl}">`
    );
  } else {
    // –î–æ–±–∞–≤–ª—è–µ–º canonical URL –ø–æ—Å–ª–µ –º–µ—Ç–∞-—Ç–µ–≥–∞ author
    html = html.replace(
      /(<meta name="author".*?>)/,
      `$1\n    <link rel="canonical" href="${canonicalUrl}">`
    );
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º Open Graph meta tags –¥–ª—è —Å—Ç–∞—Ç—å–∏
  const ogTitle = title;
  const ogDescription = description;
  const ogImage = article.img?.webp_full || article.img?.full || 'https://burspb.com/api/files/og-image-article.jpg';
  const fullOgImage = ogImage.startsWith('http') ? ogImage : `https://burspb.com${ogImage}`;
  
  // –í—Å—Ç–∞–≤–ª—è–µ–º OG —Ç–µ–≥–∏ –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç–∞-—Ç–µ–≥–æ–≤
  const ogTags = `
    <meta property="og:type" content="article">
    <meta property="og:title" content="${ogTitle}">
    <meta property="og:description" content="${ogDescription}">
    <meta property="og:image" content="${fullOgImage}">
    <meta property="og:url" content="${canonicalUrl}">
    <meta property="article:published_time" content="${article.date}">
    <meta property="article:modified_time" content="${article.modified}">
    <meta property="article:author" content="${article.author}">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="${ogTitle}">
    <meta name="twitter:description" content="${ogDescription}">
    <meta name="twitter:image" content="${fullOgImage}">`;
  
  // –í—Å—Ç–∞–≤–ª—è–µ–º OG —Ç–µ–≥–∏ –ø–æ—Å–ª–µ —Ç–µ–≥–∞ keywords
  html = html.replace(
    /(<meta name="keywords".*?>)/,
    `$1${ogTags}`
  );
  
  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å—Ç–∞—Ç–µ–π –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const statjiDir = path.join(distDir, 'statji');
  if (!fs.existsSync(statjiDir)) {
    fs.mkdirSync(statjiDir, { recursive: true });
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
  const articlePath = path.join(statjiDir, `${slug}.html`);
  fs.writeFileSync(articlePath, html);
  
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ç—å–∏: /statji/${slug} - "${title}"`);
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Ç–∏ —Ä–æ—É—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞
function getRouteFromPath(filePath, distDir) {
  const relativePath = path.relative(distDir, filePath);
  let route = '/' + relativePath.replace(/\.html$/, '').replace(/\\/g, '/');
  
  // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Ä–æ—É—Ç—ã
  if (route === '/index') {
    route = '/';
  }
  
  return route;
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö HTML —Ñ–∞–π–ª–æ–≤ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
function getAllHtmlFiles(dir) {
  let results = [];
  const items = fs.readdirSync(dir);
  
  for (const item of items) {
    const fullPath = path.join(dir, item);
    const stat = fs.statSync(fullPath);
    
    if (stat.isDirectory()) {
      // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏–º –ø–æ–¥–ø–∞–ø–∫–∏
      results = results.concat(getAllHtmlFiles(fullPath));
    } else if (item.endsWith('.html')) {
      results.push(fullPath);
    }
  }
  
  return results;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑ API
async function loadCategories() {
  return new Promise((resolve) => {
    const url = 'https://admin.burspb.com/data/v1/globals';
    https.get(url, (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        try {
          const response = JSON.parse(data);
          // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (parent: false)
          if (response.navigation && response.navigation.categories_full) {
            const mainCategories = response.navigation.categories_full.filter(cat => cat.parent === false);
            console.log(`üìÇ –ù–∞–π–¥–µ–Ω–æ ${mainCategories.length} –≥–ª–∞–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞`);
            resolve(mainCategories);
          } else if (response.categories && Array.isArray(response.categories)) {
            const mainCategories = response.categories.filter(cat => !cat.parent || cat.parent === false);
            console.log(`üìÇ –ù–∞–π–¥–µ–Ω–æ ${mainCategories.length} –≥–ª–∞–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞`);
            resolve(mainCategories);
          } else {
            console.log('‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ API:', JSON.stringify(response).substring(0, 200));
            resolve([]);
          }
        } catch (error) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ API –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error.message);
          console.log('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', data.substring(0, 200));
          resolve([]);
        }
      });
    }).on('error', (error) => {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error.message);
      resolve([]);
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ø–æ–ª–Ω—ã–º–∏ SEO –¥–∞–Ω–Ω—ã–º–∏ –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
async function loadCategoryData(slug, retries = 3) {
  return new Promise((resolve) => {
    const attemptLoad = (attempt) => {
              const url = `https://admin.burspb.com/data/v1/category/slug/${slug}`;
      https.get(url, (res) => {
        let data = '';
        res.on('data', (chunk) => data += chunk);
        res.on('end', () => {
          try {
            const response = JSON.parse(data);
            // API endpoint category/slug/{slug} –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é
            if (response && response.category) {
              console.log(`üìñ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${response.category.title}`);
              resolve(response);
            } else if (response && response.posts && response.posts.length > 0) {
              // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã - —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
              console.log(`üìñ –ù–∞–π–¥–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${slug}, —Å–æ–∑–¥–∞—é –±–∞–∑–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É`);
              const basicCategory = {
                category: {
                  id: null,
                  title: slug.replace(/-/g, ' ').replace(/^\w/, c => c.toUpperCase()),
                  seo: {
                    head_title: slug.replace(/-/g, ' ').replace(/^\w/, c => c.toUpperCase()),
                    head_description: `–ö—É–ø–∏—Ç—å ${slug.replace(/-/g, ' ')} –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ. –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏, –≥–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞.`
                  }
                },
                posts: response.posts,
                breadcrumbs: response.breadcrumbs || []
              };
              resolve(basicCategory);
            } else {
              console.log(`‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è ${slug} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ API`);
              resolve(null);
            }
          } catch (error) {
            console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ API –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${slug}:`, error.message);
            if (attempt < retries) {
              console.log(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ ${attempt + 1}/${retries} –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${slug}`);
              setTimeout(() => attemptLoad(attempt + 1), 1000 * attempt); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
            } else {
              resolve(null);
            }
          }
        });
      }).on('error', (error) => {
        console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${slug} (–ø–æ–ø—ã—Ç–∫–∞ ${attempt}/${retries}):`, error.message);
        if (attempt < retries) {
          console.log(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ ${attempt + 1}/${retries} –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${slug}`);
          setTimeout(() => attemptLoad(attempt + 1), 1000 * attempt); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
        } else {
          console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ${slug} –ø–æ—Å–ª–µ ${retries} –ø–æ–ø—ã—Ç–æ–∫`);
          resolve(null);
        }
      });
    };
    
    attemptLoad(1);
  });
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è HTML —Ñ–∞–π–ª–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞
async function createCategoryPage(categoryData, slug, distDir) {
  const DEFAULT_SUFFIX = '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏';
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–∞–ª–æ–≥–∞
  const templatePath = path.join(distDir, 'catalog.html');
  if (!fs.existsSync(templatePath)) {
    console.log('‚ö†Ô∏è –®–∞–±–ª–æ–Ω catalog.html –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  let html = fs.readFileSync(templatePath, 'utf-8');
  
  // –°–æ–∑–¥–∞–µ–º title –∏ description –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const seoData = categoryData.category?.seo;
  let title = '';
  
  if (seoData?.head_title) {
    // –ï—Å–ª–∏ –µ—Å—Ç—å head_title, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—É—Ñ—Ñ–∏–∫—Å
    title = seoData.head_title;
    if (title && typeof title === 'string' && !title.includes(DEFAULT_SUFFIX)) {
      title = `${title} ‚Äî ${DEFAULT_SUFFIX}`;
    }
  } else if (seoData?.title) {
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ—Å—Ç–æ title, –¥–æ–±–∞–≤–ª—è–µ–º —Å—É—Ñ—Ñ–∏–∫—Å
    title = `${seoData.title} ‚Äî ${DEFAULT_SUFFIX}`;
  } else {
    // –ï—Å–ª–∏ –Ω–µ—Ç SEO –¥–∞–Ω–Ω—ã—Ö, —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    title = `${categoryData.category.title} ‚Äî ${DEFAULT_SUFFIX}`;
  }
  
  const description = seoData?.head_description || 
    (seoData?.description ? seoData.description.replace(/<[^>]*>/g, '').slice(0, 160) : 
    `–ö—É–ø–∏—Ç—å ${categoryData.category.title.toLowerCase()} –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ. –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏, –≥–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞.`);
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º OG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –±–µ—Ä–µ–º –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
  const ogImage = categoryData.posts && categoryData.posts.length > 0 && categoryData.posts[0].img?.webp_full
    ? categoryData.posts[0].img.webp_full || categoryData.posts[0].img?.full
    : 'https://burspb.com/api/files/og-image-catalog.jpg';

  // –û–±–Ω–æ–≤–ª—è–µ–º title
  html = html.replace(/<title>.*?<\/title>/i, `<title>${title}</title>`);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º description
  html = html.replace(/<meta name="description" content=".*?">/i, 
    `<meta name="description" content="${escapeHtml(description)}">`);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º Open Graph –º–µ—Ç–∞-—Ç–µ–≥–∏
  html = html.replace(/<meta property="og:title" content=".*?">/i, 
    `<meta property="og:title" content="${escapeHtml(title)}">`);
  html = html.replace(/<meta property="og:description" content=".*?">/i, 
    `<meta property="og:description" content="${escapeHtml(description)}">`);
  html = html.replace(/<meta property="og:image" content=".*?">/i, 
    `<meta property="og:image" content="${ogImage}">`);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º Twitter –º–µ—Ç–∞-—Ç–µ–≥–∏
  html = html.replace(/<meta name="twitter:title" content=".*?">/i, 
    `<meta name="twitter:title" content="${escapeHtml(title)}">`);
  html = html.replace(/<meta name="twitter:description" content=".*?">/i, 
    `<meta name="twitter:description" content="${escapeHtml(description)}">`);
  html = html.replace(/<meta name="twitter:image" content=".*?">/i, 
    `<meta name="twitter:image" content="${ogImage}">`);

  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
  const categoryDir = path.join(distDir, 'catalog');
  if (!fs.existsSync(categoryDir)) {
    fs.mkdirSync(categoryDir, { recursive: true });
  }
  
  const filePath = path.join(categoryDir, `category-${slug}.html`);
  fs.writeFileSync(filePath, html);
  return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ API
async function loadSubcategories() {
  return new Promise((resolve) => {
    const url = 'https://admin.burspb.com/data/v1/globals';
    https.get(url, (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        try {
          const response = JSON.parse(data);
          // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (parent: –Ω–µ false)
          if (response.navigation && response.navigation.categories_full) {
            const subcategories = response.navigation.categories_full.filter(cat => cat.parent !== false);
            console.log(`üìÇ –ù–∞–π–¥–µ–Ω–æ ${subcategories.length} –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞`);
            resolve(subcategories);
          } else if (response.categories && Array.isArray(response.categories)) {
            const subcategories = response.categories.filter(cat => cat.parent && cat.parent !== false);
            console.log(`üìÇ –ù–∞–π–¥–µ–Ω–æ ${subcategories.length} –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞`);
            resolve(subcategories);
          } else {
            console.log('‚ö†Ô∏è –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ API:', JSON.stringify(response).substring(0, 200));
            resolve([]);
          }
        } catch (error) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ API –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error.message);
          console.log('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', data.substring(0, 200));
          resolve([]);
        }
      });
    }).on('error', (error) => {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error.message);
      resolve([]);
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∏–º–µ–Ω –∞—Å—Å–µ—Ç–æ–≤
function getAssetNames(distDir) {
  const assetsDir = path.join(distDir, 'assets');
  const files = fs.readdirSync(assetsDir);
  
  const appJs = files.find(f => f.startsWith('app-') && f.endsWith('.js'));
  const appCss = files.find(f => f.startsWith('app-') && f.endsWith('.css'));
  const vueVendorJs = files.find(f => f.startsWith('vue-vendor-') && f.endsWith('.js'));
  const utilsJs = files.find(f => f.startsWith('utils-') && f.endsWith('.js'));
  
  return {
    appJs: appJs || 'app.js',
    appCss: appCss || 'app.css', 
    vueVendorJs: vueVendorJs || 'vue-vendor.js',
    utilsJs: utilsJs || 'utils.js'
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥–±–æ—Ä–∫–∏
function createSelectionPage(selectionData, slug, distDir, title, parentCategory, parentTitle) {
  // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –∞—Å—Å–µ—Ç–æ–≤
  const assets = getAssetNames(distDir);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π title –∏–ª–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏–∑ slug
  const selectionTitle = title || slug.replace(/-/g, ' ').replace(/^\w/, c => c.toUpperCase());
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º SEO –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–±–æ—Ä–∫–∏ (–∫–∞–∫ –≤ —Ä–∞–±–æ—á–µ–º –∫–æ–¥–µ)
  const fullTitle = `${selectionTitle}. –ö—É–ø–∏—Ç—å ${selectionTitle.toLowerCase()} –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏`;
  const fullDescription = `–ö—É–ø–∏—Ç—å ${selectionTitle.toLowerCase()} –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏! üî•–®–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä ${selectionTitle.toLowerCase()}! ‚úÖ–ì–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è!üöö –î–æ—Å—Ç–∞–≤–∫–∞! üéÅ–í—Å–µ–≥–¥–∞ –≤ –Ω–∞–ª–∏—á–∏–∏!`;
  
  // –°—Ç—Ä–æ–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ breadcrumbs –¥–ª—è –ø–æ–¥–±–æ—Ä–∫–∏
  const breadcrumbs = [
    { name: '–ì–ª–∞–≤–Ω–∞—è', url: '/' },
    { name: '–ö–∞—Ç–∞–ª–æ–≥', url: '/catalog' }
  ];
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –ø–æ–¥–±–æ—Ä–æ–∫
  if (parentCategory === 'pnevmoudarnik') {
    breadcrumbs.push(
      { name: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–Ω–µ–≤–º–æ—É–¥–∞—Ä–Ω–æ–≥–æ –±—É—Ä–µ–Ω–∏—è', url: '/catalog/category-instrumenty-dlya-pnevmoudarnogo-bureniya' },
      { name: '–ü–Ω–µ–≤–º–æ—É–¥–∞—Ä–Ω–∏–∫–∏', url: '/catalog/category-pnevmoudarnik' }
    );
  } else if (parentCategory === 'burovye-dolota') {
    breadcrumbs.push(
      { name: '–ë—É—Ä–æ–≤–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç', url: '/catalog/category-burovoj-instrument' },
      { name: '–ë—É—Ä–æ–≤—ã–µ –¥–æ–ª–æ—Ç–∞', url: '/catalog/category-burovye-dolota' }
    );
  } else if (parentCategory === 'koronki-tverdosplavnye') {
    breadcrumbs.push(
      { name: '–ë—É—Ä–æ–≤–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç', url: '/catalog/category-burovoj-instrument' },
      { name: '–ö–æ—Ä–æ–Ω–∫–∏ —Ç–≤–µ—Ä–¥–æ—Å–ø–ª–∞–≤–Ω—ã–µ', url: '/catalog/category-koronki-tverdosplavnye' }
    );
  } else if (parentCategory === 'skvazhinnye-nasosy') {
    breadcrumbs.push(
      { name: '–ù–∞—Å–æ—Å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', url: '/catalog/category-nasosnoe-oborudovanie' },
      { name: '–°–∫–≤–∞–∂–∏–Ω–Ω—ã–µ –Ω–∞—Å–æ—Å—ã', url: '/catalog/category-skvazhinnye-nasosy' }
    );
  } else if (parentCategory === 'obsadnye-truby') {
    breadcrumbs.push(
      { name: '–û–±—Å–∞–¥–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', url: '/catalog/category-obsadnye-materialy' },
      { name: '–û–±—Å–∞–¥–Ω—ã–µ —Ç—Ä—É–±—ã', url: '/catalog/category-obsadnye-truby' }
    );
  } else if (parentCategory === 'skvazhinnye-ogolovki') {
    breadcrumbs.push(
      { name: '–°–∫–≤–∞–∂–∏–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', url: '/catalog/category-skvazhinnoe-oborudovanie' },
      { name: '–°–∫–≤–∞–∂–∏–Ω–Ω—ã–µ –æ–≥–æ–ª–æ–≤–∫–∏', url: '/catalog/category-skvazhinnye-ogolovki' }
    );
  } else {
    // –û–±—â–∏–π —Å–ª—É—á–∞–π
    breadcrumbs.push({ name: parentTitle || parentCategory, url: `/catalog/category-${parentCategory}` });
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–¥–±–æ—Ä–∫—É
  breadcrumbs.push({ name: selectionTitle, url: `/catalog/selection-${slug}` });

  const htmlContent = `<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${escapeHtml(fullTitle)}</title>
  <meta name="description" content="${escapeHtml(fullDescription)}">
  <meta property="og:title" content="${escapeHtml(fullTitle)}">
  <meta property="og:description" content="${escapeHtml(fullDescription)}">
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://burspb.com/catalog/selection-${slug}">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="${escapeHtml(fullTitle)}">
  <meta name="twitter:description" content="${escapeHtml(fullDescription)}">
  <link rel="canonical" href="https://burspb.com/catalog/selection-${slug}">
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "CollectionPage",
    "name": "${escapeHtml(selectionTitle)}",
    "description": "${escapeHtml(fullDescription)}",
    "url": "https://burspb.com/catalog/selection-${slug}",
    "breadcrumb": {
      "@type": "BreadcrumbList",
      "itemListElement": [
        ${breadcrumbs.map((crumb, index) => `{
          "@type": "ListItem",
          "position": ${index + 1},
          "name": "${escapeHtml(crumb.name)}",
          "item": "https://burspb.com${crumb.url}"
        }`).join(',')}
      ]
    },
    "mainEntity": {
      "@type": "ItemList",
      "numberOfItems": ${selectionData.posts ? selectionData.posts.length : 0}
    }
  }
  </script>
</head>
<body>
  <div id="app" data-server-rendered="true">
    <!-- SSR –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–±–æ—Ä–∫–∏ -->
    <script type="application/json" id="__INITIAL_STATE__">
    ${JSON.stringify({
      selection: {
        slug: slug,
        title: selectionTitle,
        description: fullDescription,
        breadcrumbs: breadcrumbs,
        posts: (selectionData.posts || []).map(post => ({
          id: post.id,
          slug: post.slug,
          title: post.title,
          date: post.date,
          modified: post.modified,
          price: post.price,
          img: post.img ? {
            webp_small: post.img.webp_small,
            webp_medium: post.img.webp_medium,
            webp_full: post.img.webp_full,
            small: post.img.small,
            medium: post.img.medium,
            full: post.img.full
          } : null,
          category: post.category,
          availability: post.availability
        })),
        parentCategory: parentCategory
      }
    }).replace(/</g, '\\u003c').replace(/>/g, '\\u003e')}
    </script>
  </div>
  <script type="module" crossorigin="" src="/assets/${assets.appJs}"></script>
  <link rel="modulepreload" crossorigin="" href="/assets/${assets.vueVendorJs}">
  <link rel="modulepreload" crossorigin="" href="/assets/${assets.utilsJs}">
  <link rel="stylesheet" crossorigin="" href="/assets/${assets.appCss}">
</body>
</html>`;

  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ catalog/ 
  const catalogDir = path.join(distDir, 'catalog');
  if (!fs.existsSync(catalogDir)) {
    fs.mkdirSync(catalogDir, { recursive: true });
  }
  const fileName = `selection-${slug}.html`;
  const filePath = path.join(catalogDir, fileName);
  
  try {
    fs.writeFileSync(filePath, htmlContent, 'utf8');
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: /catalog/${fileName} - "${selectionTitle}" (${selectionData.posts ? selectionData.posts.length : 0} —Ç–æ–≤–∞—Ä–æ–≤)`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–∫–∏ ${slug}:`, error.message);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –ø–æ–¥–±–æ—Ä–æ–∫ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ API
async function loadSelections() {
  const selections = [];
  
  console.log(`üîç –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–±–æ—Ä–æ–∫ –∏–∑ API...`);
  
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–¥–±–æ—Ä–∫–∏ —á–µ—Ä–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (endpoint /v1/selections –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞—é –ø–æ–¥–±–æ—Ä–∫–∏ —á–µ—Ä–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
      
      const categoriesToCheck = [
        'pnevmoudarnik',
        'burovye-dolota', 
        'koronki-tverdosplavnye',
        'skvazhinnye-nasosy',
        'obsadnye-truby',
        'skvazhinnye-ogolovki'
      ];
      
      console.log(`üìÇ –ü—Ä–æ–≤–µ—Ä—è—é ${categoriesToCheck.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–±–æ—Ä–æ–∫...`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞ –Ω–∞–ª–∏—á–∏–µ nested_categories (–ø–æ–¥–±–æ—Ä–æ–∫)
      for (const categorySlug of categoriesToCheck) {
        try {
          console.log(`üìÇ –ü—Ä–æ–≤–µ—Ä—è—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ${categorySlug}`);
          
          // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å nested_categories
          const categoryData = await retryApiCall(() => loadCategoryData(categorySlug));
          console.log(`   –î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categorySlug}: ${categoryData ? '–∑–∞–≥—Ä—É–∂–µ–Ω—ã' : '–ù–ï –ù–ê–ô–î–ï–ù–´'}`);
          
          if (categoryData && categoryData.nested_categories && categoryData.nested_categories.length > 0) {
            console.log(`   –ù–∞–π–¥–µ–Ω–æ ${categoryData.nested_categories.length} –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–æ–¥–±–æ—Ä–æ–∫`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é nested_category - —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–∞ –ø–æ–¥–±–æ—Ä–∫–æ–π
            for (const nested of categoryData.nested_categories) {
              if (nested.slug && nested.title) {
                try {
                  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ nested_category
                  const selectionData = await retryApiCall(() => loadCategoryData(nested.slug));
                  
                  if (selectionData) {
                    // –ü–æ–¥–±–æ—Ä–∫–∞: —ç–ª–µ–º–µ–Ω—Ç –∏–∑ nested_categories —Å —Ç–æ–≤–∞—Ä–∞–º–∏
                    const hasCategory = selectionData.category;
                    const hasPosts = selectionData.posts && selectionData.posts.length > 0;
                    
                    console.log(`     üîç ${nested.title}: category=${hasCategory ? '–µ—Å—Ç—å' : '–ù–ï–¢'}, posts=${selectionData.posts ? selectionData.posts.length : 0}`);
                    
                    // –ò–∑–º–µ–Ω—è–µ–º –ª–æ–≥–∏–∫—É: –ø–æ–¥–±–æ—Ä–∫–∏ —ç—Ç–æ nested_categories —Å —Ç–æ–≤–∞—Ä–∞–º–∏
                    if (hasPosts) {
                      // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∫ –ø–æ–¥–±–æ—Ä–∫–µ
                      let filteredPosts = selectionData.posts;
                      
                      // –î–ª—è –ø–Ω–µ–≤–º–æ—É–¥–∞—Ä–Ω–∏–∫–æ–≤ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ä–∞–∑–º–µ—Ä—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
                      if (nested.slug.includes('pnevmoudarniki-') && nested.slug.includes('-mm')) {
                        const sizeMatch = nested.slug.match(/(\d+)-mm/);
                        if (sizeMatch) {
                          const targetSize = sizeMatch[1];
                          filteredPosts = selectionData.posts.filter(post => 
                            post.title && (post.title.includes(targetSize) || post.title.toLowerCase().includes('–ø–Ω–µ–≤–º–æ—É–¥–∞—Ä–Ω–∏–∫'))
                          );
                        }
                      }
                      // –î–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–¥–±–æ—Ä–æ–∫ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—É—é –ª–æ–≥–∏–∫—É
                      
                      console.log(`     ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–æ–¥–±–æ—Ä–∫–∞: ${nested.title} (${selectionData.posts.length} —Ç–æ–≤–∞—Ä–æ–≤, ${filteredPosts.length} –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ)`);
                      
                      // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
                      const filteredData = {
                        ...selectionData,
                        posts: filteredPosts
                      };
                      
                      selections.push({
                        slug: nested.slug,
                        title: nested.title,
                        parentCategory: categorySlug,
                        parentTitle: categoryData.title || categorySlug,
                        itemCount: filteredPosts.length,
                        data: filteredData
                      });
                    }
                  }
                } catch (error) {
                  console.log(`     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ ${nested.slug}: ${error.message}`);
                }
              }
            }
          }
        } catch (error) {
          console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categorySlug}: ${error.message}`);
        }
      }
    
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${selections.length} –ø–æ–¥–±–æ—Ä–æ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    return selections;
    
  } catch (error) {
    console.log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–±–æ—Ä–æ–∫: ${error.message}`);
    console.log(`   Stack trace: ${error.stack}`);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ API —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
async function loadProducts() {
  const allProducts = [];
  let currentPage = 1;
  let totalPages = 1;
  
  console.log(`üîç –ó–∞–≥—Ä—É–∂–∞—é —Ç–æ–≤–∞—Ä—ã –∏–∑ API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π...`);
  
  try {
    do {
      console.log(`üìÑ –ó–∞–≥—Ä—É–∂–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É ${currentPage}/${totalPages}...`);
      
      const pageProducts = await new Promise((resolve) => {
        const url = `https://admin.burspb.com/data/v1/products?page=${currentPage}`;
        https.get(url, (res) => {
          let data = '';
          res.on('data', (chunk) => data += chunk);
          res.on('end', () => {
            try {
              const response = JSON.parse(data);
              
              // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
              if (response.pagination && response.pagination.pages_total) {
                totalPages = response.pagination.pages_total;
              }
              
              // API –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
              if (Array.isArray(response)) {
                console.log(`   üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${response.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${currentPage}`);
                resolve(response);
              } else if (response.posts && Array.isArray(response.posts)) {
                console.log(`   üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${response.posts.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${currentPage}`);
                resolve(response.posts);
              } else if (response.products && Array.isArray(response.products)) {
                console.log(`   üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${response.products.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${currentPage}`);
                resolve(response.products);
              } else if (response.data && Array.isArray(response.data)) {
                console.log(`   üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${response.data.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${currentPage}`);
                resolve(response.data);
              } else {
                console.log(`‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${currentPage}: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞`);
                resolve([]);
              }
            } catch (error) {
              console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${currentPage}:`, error.message);
              resolve([]);
            }
          });
        }).on('error', (error) => {
          console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${currentPage}:`, error.message);
          resolve([]);
        });
      });
      
      if (pageProducts.length > 0) {
        allProducts.push(...pageProducts);
      }
      
      currentPage++;
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–≥—Ä—É–∂–∞—Ç—å API
      if (currentPage <= totalPages) {
        await new Promise(resolve => setTimeout(resolve, 100));
      }
      
    } while (currentPage <= totalPages);
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ slug
    const uniqueProducts = [];
    const seenSlugs = new Set();
    
    for (const product of allProducts) {
      if (product.slug && !seenSlugs.has(product.slug)) {
        seenSlugs.add(product.slug);
        uniqueProducts.push(product);
      }
    }
    
    console.log(`üì¶ –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${allProducts.length}, —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö: ${uniqueProducts.length}`);
    return uniqueProducts;
    
  } catch (error) {
    console.log('‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error.message);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞  
function createProductPage(product, distDir) {
  // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –∞—Å—Å–µ—Ç–æ–≤
  const assets = getAssetNames(distDir);
  
  const productTitle = product.title || '–¢–æ–≤–∞—Ä';
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º SEO –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
  const fullTitle = `${productTitle} ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏`;
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ content –∏–ª–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏–∑ title
  let description = '';
  if (product.content && typeof product.content === 'string') {
    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 160 —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ content –∏ –æ—á–∏—â–∞–µ–º –æ—Ç HTML
    description = product.content
      .replace(/<[^>]*>/g, '') // —É–¥–∞–ª—è–µ–º HTML —Ç–µ–≥–∏
      .replace(/\r\n/g, ' ') // –∑–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –Ω–∞ –ø—Ä–æ–±–µ–ª—ã
      .substring(0, 160);
    if (product.content.length > 160) {
      description += '...';
    }
  }
  
  if (!description) {
    description = `–ö—É–ø–∏—Ç—å ${productTitle.toLowerCase()} –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏! ‚úÖ–ì–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è!üöö –î–æ—Å—Ç–∞–≤–∫–∞! üéÅ–í—Å–µ–≥–¥–∞ –≤ –Ω–∞–ª–∏—á–∏–∏!`;
  }

  const htmlContent = `<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${escapeHtml(fullTitle)}</title>
  <meta name="description" content="${escapeHtml(description)}">
  <meta property="og:title" content="${escapeHtml(fullTitle)}">
  <meta property="og:description" content="${escapeHtml(description)}">
  <meta property="og:type" content="product">
  <meta property="og:url" content="https://burspb.com/catalog/product-${product.slug}">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="${escapeHtml(fullTitle)}">
  <meta name="twitter:description" content="${escapeHtml(description)}">
  <link rel="canonical" href="https://burspb.com/catalog/product-${product.slug}">
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "Product",
    "name": "${escapeHtml(productTitle)}",
    "description": "${escapeHtml(description)}",
    "url": "https://burspb.com/catalog/product-${product.slug}",
    "offers": {
      "@type": "Offer",
      "price": "${product.meta?.price || '0'}",
      "priceCurrency": "RUB",
      "availability": "${product.meta?.availability ? 'https://schema.org/InStock' : 'https://schema.org/OutOfStock'}"
    }
  }
  </script>
</head>
<body>
  <div id="app" data-server-rendered="true">
    <!-- SSR –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ -->
    <script type="application/json" id="__INITIAL_STATE__">
    ${JSON.stringify({
      product: {
        id: product.id,
        title: product.title,
        slug: product.slug,
        content: typeof product.content === 'string' ? product.content.replace(/<[^>]*>/g, '') : product.content,
        price: product.meta?.price || product.price,
        availability: product.meta?.availability || product.availability,
        img: product.img ? {
          webp_small: product.img.webp_small,
          webp_medium: product.img.webp_medium,
          webp_full: product.img.webp_full,
          small: product.img.small,
          medium: product.img.medium,
          full: product.img.full
        } : null,
        category: typeof product.category === 'string' ? product.category : (product.category?.title || product.category?.name),
        breadcrumbs: product.breadcrumbs || []
      }
    }).replace(/</g, '\\u003c').replace(/>/g, '\\u003e')}
          </script>
    </div>
        <script type="module" crossorigin="" src="/assets/${assets.appJs}"></script>
    <link rel="modulepreload" crossorigin="" href="/assets/${assets.vueVendorJs}">
    <link rel="modulepreload" crossorigin="" href="/assets/${assets.utilsJs}">
    <link rel="stylesheet" crossorigin="" href="/assets/${assets.appCss}">
</body>
</html>`;

  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É catalog –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  const catalogDir = path.join(distDir, 'catalog');
  if (!fs.existsSync(catalogDir)) {
    fs.mkdirSync(catalogDir, { recursive: true });
    console.log('üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ /catalog');
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Ç–æ–≤–∞—Ä–∞ –≤ –ø–∞–ø–∫–µ catalog —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º product-
  const fileName = `product-${product.slug}.html`;
  const filePath = path.join(catalogDir, fileName);
  
  try {
    fs.writeFileSync(filePath, htmlContent, 'utf8');
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: /catalog/${fileName} - "${productTitle}"`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${product.slug}:`, error.message);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  const distDir = path.join(process.cwd(), 'dist');
  
  if (!fs.existsSync(distDir)) {
    console.log('‚ùå –ü–∞–ø–∫–∞ —Å–±–æ—Ä–∫–∏ dist/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    process.exit(1);
  }
  
  console.log('üîß –ù–∞—á–∏–Ω–∞—é –ø–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫—É SEO –º–µ—Ç–∞-—Ç–µ–≥–æ–≤...');
  
  // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–µ–π
  console.log('üìö –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π –∏–∑ API...');
  const articles = await loadArticles();
  
  let createdArticles = 0;
  
  if (articles && articles.length > 0) {
    console.log(`üìù –ù–∞–π–¥–µ–Ω–æ ${articles.length} —Å—Ç–∞—Ç–µ–π –≤ API. –°–æ–∑–¥–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã...`);
    
    // –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª—ã –¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π –∏–∑ API
    for (const article of articles) {
      if (article.slug) {
        try {
          // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
          const fullArticle = await loadArticle(article.slug);
          if (fullArticle) {
            await createArticlePage(fullArticle, article.slug, distDir);
            createdArticles++;
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: /statji/${article.slug} - "${fullArticle.title}"`);
          } else {
            console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç—å–∏: ${article.slug}`);
          }
        } catch (error) {
          console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è ${article.slug}:`, error.message);
        }
      }
    }
    
    console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${createdArticles} —Å—Ç—Ä–∞–Ω–∏—Ü —Å—Ç–∞—Ç–µ–π –∏–∑ ${articles.length} –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö`);
  } else {
    console.log('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—å–∏. –°—Ç–∞—Ç—å–∏ –Ω–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã.');
    createdArticles = 0;
  }

  // –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞
  console.log('üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑ API...');
  const categories = await loadCategories();

  let createdCategories = 0;

  if (categories && categories.length > 0) {
    console.log(`üè∑Ô∏è –ù–∞–π–¥–µ–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ API. –°–æ–∑–¥–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã...`);
    
    // –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª—ã –¥–ª—è –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ API
    for (const category of categories) {
      if (category.slug) {
        try {
          // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
          const fullCategoryData = await loadCategoryData(category.slug);
          if (fullCategoryData) {
            await createCategoryPage(fullCategoryData, category.slug, distDir);
            createdCategories++;
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: /catalog/category-${category.slug} - "${fullCategoryData.category.title}"`);
          } else {
            console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${category.slug}`);
          }
        } catch (error) {
          console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category.slug}:`, error.message);
        }
      }
    }
    
    console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${createdCategories} —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ ${categories.length} –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö`);
  } else {
    console.log('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –≤–µ—Ä–Ω—É–ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã.');
    createdCategories = 0;
  }

  // –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞
  console.log('üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑ API...');
  const subcategories = await loadSubcategories();

  let createdSubcategories = 0;

  if (subcategories && subcategories.length > 0) {
    console.log(`üè∑Ô∏è –ù–∞–π–¥–µ–Ω–æ ${subcategories.length} –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ API. –°–æ–∑–¥–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã...`);
    
    // –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ API
    for (const subcategory of subcategories) {
      if (subcategory.slug) {
        try {
          // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
          const fullSubcategoryData = await retryApiCall(() => loadCategoryData(subcategory.slug));
          
          if (fullSubcategoryData && fullSubcategoryData.category) {
            // –û–±—ã—á–Ω–∞—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å SEO –¥–∞–Ω–Ω—ã–º–∏
            const created = await createCategoryPage(fullSubcategoryData, subcategory.slug, distDir);
            if (created) {
              createdSubcategories++;
              console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: /catalog/category-${subcategory.slug} - "${fullSubcategoryData.category.title}"`);
            }
          } else if (fullSubcategoryData && fullSubcategoryData.posts && fullSubcategoryData.posts.length > 0) {
            // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã - —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            console.log(`üìñ –ù–∞–π–¥–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${subcategory.slug}, —Å–æ–∑–¥–∞—é –±–∞–∑–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É`);
            const basicCategory = {
              category: {
                id: null,
                title: subcategory.slug.replace(/-/g, ' ').replace(/^\w/, c => c.toUpperCase()),
                seo: {
                  head_title: `${subcategory.slug.replace(/-/g, ' ').replace(/^\w/, c => c.toUpperCase())} ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏`,
                  head_description: `–ö—É–ø–∏—Ç—å ${subcategory.slug.replace(/-/g, ' ').toLowerCase()} –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ. –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –±—É—Ä–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏, –≥–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞.`
                }
              },
              posts: fullSubcategoryData.posts
            };
            
            const created = await createCategoryPage(basicCategory, subcategory.slug, distDir);
            if (created) {
              createdSubcategories++;
              console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: /catalog/category-${subcategory.slug} - "${basicCategory.category.title}"`);
            }
          } else {
            console.log(`‚ö†Ô∏è –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è ${subcategory.slug} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ API`);
          }
        } catch (error) {
          console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${subcategory.slug}`);
        }
      }
    }
    
    console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${createdSubcategories} —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ ${subcategories.length} –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö`);
  } else {
    console.log('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –≤–µ—Ä–Ω—É–ª –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã.');
    createdSubcategories = 0;
  }

  // –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥–±–æ—Ä–æ–∫ –∫–∞—Ç–∞–ª–æ–≥–∞
  console.log('üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–±–æ—Ä–æ–∫ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑ API...');
  const selections = await loadSelections();

  let createdSelections = 0;

  if (selections && selections.length > 0) {
    console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ ${selections.length} –ø–æ–¥–±–æ—Ä–æ–∫ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ API. –°–æ–∑–¥–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã...`);
    
    // –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–±–æ—Ä–æ–∫ –∏–∑ API
    for (const selection of selections) {
      if (selection.slug && selection.data) {
        try {
          console.log(`üì¶ –°–æ–∑–¥–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥–±–æ—Ä–∫–∏: ${selection.title} (${selection.itemCount} —Ç–æ–≤–∞—Ä–æ–≤)`);
          
          // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥–±–æ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—è —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          const created = createSelectionPage(selection.data, selection.slug, distDir, selection.title, selection.parentCategory, selection.parentTitle);
          if (created) {
            createdSelections++;
          }
        } catch (error) {
          console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥–±–æ—Ä–∫–∏ ${selection.slug}: ${error.message}`);
        }
      }
    }
    
    console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${createdSelections} —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–¥–±–æ—Ä–æ–∫ –∏–∑ ${selections.length} –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö`);
  } else {
    console.log('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –≤–µ—Ä–Ω—É–ª –ø–æ–¥–±–æ—Ä–∫–∏. –ü–æ–¥–±–æ—Ä–∫–∏ –Ω–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã.');
    createdSelections = 0;
  }

  // –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
  console.log('üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑ API...');
  let createdProducts = 0;
  
  try {
    const allProducts = await loadProducts();
    
    if (allProducts && allProducts.length > 0) {
      console.log(`üõçÔ∏è –ù–∞–π–¥–µ–Ω–æ ${allProducts.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ API. –°–æ–∑–¥–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã...`);
      
      // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
      for (const product of allProducts) {
        if (product.slug && product.title) {
          try {
            console.log(`üì¶ –°–æ–∑–¥–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞: ${product.title}`);
            
            const created = createProductPage(product, distDir);
            if (created) {
              createdProducts++;
            }
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ ${product.slug}:`, error.message);
          }
        }
      }
      
      console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${createdProducts} —Å—Ç—Ä–∞–Ω–∏—Ü —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ ${allProducts.length} –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö`);
    } else {
      console.log(`‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ API`);
    }
  } catch (error) {
    console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: ${error.message}`);
  }

  // –ó–∞—Ç–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  console.log('üìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü...');
  const htmlFiles = getAllHtmlFiles(distDir);
  
  for (const file of htmlFiles) {
    const route = getRouteFromPath(file, distDir);
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–µ–π
    if (route.startsWith('/statji/') && route !== '/statji') {
      continue;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞
    if (route.startsWith('/catalog/category-')) {
      continue;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥–±–æ—Ä–æ–∫
    if (route.startsWith('/catalog/selection-') || route.startsWith('/selection-')) {
      continue;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
    if (route.startsWith('/products/') || route.startsWith('/catalog/product-') || route.startsWith('/product-') || route.startsWith('/product/')) {
      continue;
    }
    
    const meta = pageMetas[route];
    if (meta) {
      updateMetaTags(file, route);
    }
  }
  
  console.log(`‚úÖ –ü–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞ SEO –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–æ–∑–¥–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: ${createdArticles}, –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${createdCategories}, –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${createdSubcategories}, –ø–æ–¥–±–æ—Ä–æ–∫: ${createdSelections}, —Ç–æ–≤–∞—Ä–æ–≤: ${createdProducts}`);
}

main();