const https = require('https');
const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML —Å–∏–º–≤–æ–ª–æ–≤
function escapeHtml(text) {
  if (!text || typeof text !== 'string') {
    return '';
  }
  
  const map = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#039;'
  };
  
  return text.replace(/[&<>"']/g, function(m) { return map[m]; });
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async function loadProducts() {
  try {
    console.log(`üîç –ó–∞–≥—Ä—É–∂–∞—é —Ç–æ–≤–∞—Ä—ã –∏–∑ –æ–¥–Ω–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...`);
    
    const url = 'https://admin.burspb.com/data/v1/category/slug/pnevmoudarnik';
    const categoryData = await new Promise((resolve, reject) => {
      https.get(url, (res) => {
        let data = '';
        res.on('data', (chunk) => data += chunk);
        res.on('end', () => {
          try {
            const response = JSON.parse(data);
            resolve(response);
          } catch (error) {
            reject(error);
          }
        });
      }).on('error', reject);
    });
    
    if (categoryData && categoryData.posts && categoryData.posts.length > 0) {
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${categoryData.posts.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ pnevmoudarnik`);
      return categoryData.posts;
    } else {
      console.log(`‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ pnevmoudarnik`);
      return [];
    }
    
  } catch (error) {
    console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: ${error.message}`);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞  
function createProductPage(product, distDir) {
  const productTitle = product.title || '–¢–æ–≤–∞—Ä';
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º SEO –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
  const fullTitle = `${productTitle} ‚Äî –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—É—Ä–µ–Ω–∏—è ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏`;
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ content –∏–ª–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏–∑ title
  let description = '';
  if (product.content && typeof product.content === 'string') {
    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 160 —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ content –∏ –æ—á–∏—â–∞–µ–º –æ—Ç HTML
    description = product.content
      .replace(/<[^>]*>/g, '') // —É–¥–∞–ª—è–µ–º HTML —Ç–µ–≥–∏
      .replace(/\r\n/g, ' ') // –∑–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –Ω–∞ –ø—Ä–æ–±–µ–ª—ã
      .substring(0, 160);
    if (product.content.length > 160) {
      description += '...';
    }
  }
  
  if (!description) {
    description = `–ö—É–ø–∏—Ç—å ${productTitle.toLowerCase()} –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ì–ö –ë—É—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏! ‚úÖ–ì–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è!üöö –î–æ—Å—Ç–∞–≤–∫–∞! üéÅ–í—Å–µ–≥–¥–∞ –≤ –Ω–∞–ª–∏—á–∏–∏!`;
  }

  const htmlContent = `<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${escapeHtml(fullTitle)}</title>
  <meta name="description" content="${escapeHtml(description)}">
  <meta property="og:title" content="${escapeHtml(fullTitle)}">
  <meta property="og:description" content="${escapeHtml(description)}">
  <meta property="og:type" content="product">
  <meta property="og:url" content="https://burspb.com/catalog/product-${product.slug}">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="${escapeHtml(fullTitle)}">
  <meta name="twitter:description" content="${escapeHtml(description)}">
  <link rel="canonical" href="https://burspb.com/catalog/product-${product.slug}">
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "Product",
    "name": "${escapeHtml(productTitle)}",
    "description": "${escapeHtml(description)}",
    "url": "https://burspb.com/catalog/product-${product.slug}",
    "offers": {
      "@type": "Offer",
      "price": "${product.meta?.price || '0'}",
      "priceCurrency": "RUB",
      "availability": "${product.meta?.availability ? 'https://schema.org/InStock' : 'https://schema.org/OutOfStock'}"
    }
  }
  </script>
</head>
<body>
  <div id="app"></div>
  <script type="module" src="/src/main.ts"></script>
</body>
</html>`;

  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É catalog –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  const catalogDir = path.join(distDir, 'catalog');
  if (!fs.existsSync(catalogDir)) {
    fs.mkdirSync(catalogDir, { recursive: true });
    console.log('üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ /catalog');
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Ç–æ–≤–∞—Ä–∞ –≤ –ø–∞–ø–∫–µ catalog —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º product-
  const fileName = `product-${product.slug}.html`;
  const filePath = path.join(catalogDir, fileName);
  
  try {
    fs.writeFileSync(filePath, htmlContent, 'utf8');
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: /catalog/${fileName} - "${productTitle}"`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${product.slug}:`, error.message);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...');
  
  const distDir = path.join(process.cwd(), 'dist');
  let createdProducts = 0;
  
  try {
    const allProducts = await loadProducts();
    
    if (allProducts && allProducts.length > 0) {
      console.log(`üõçÔ∏è –ù–∞–π–¥–µ–Ω–æ ${allProducts.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ API. –°–æ–∑–¥–∞—é –ø–µ—Ä–≤—ã–µ 5 –¥–ª—è —Ç–µ—Å—Ç–∞...`);
      
      // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞
      for (const product of allProducts.slice(0, 5)) {
        if (product.slug && product.title) {
          try {
            console.log(`üì¶ –°–æ–∑–¥–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞: ${product.title}`);
            
            const created = createProductPage(product, distDir);
            if (created) {
              createdProducts++;
            }
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ ${product.slug}:`, error.message);
          }
        }
      }
      
      console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${createdProducts} —Å—Ç—Ä–∞–Ω–∏—Ü —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ 5 —Ç–µ—Å—Ç–æ–≤—ã—Ö`);
    } else {
      console.log(`‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ API`);
    }
  } catch (error) {
    console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: ${error.message}`);
  }
}

main().catch(console.error); 